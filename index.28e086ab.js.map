{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = initialState;\n        this.currentState = initialState.map(function(el) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(el);\n        });\n        this.tbody = document.querySelector(\"tbody\");\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"nextMovePossible\",\n            value: function nextMovePossible() {\n                var _this = this;\n                return this.currentState.some(function(row, rowIndex) {\n                    return row.some(function(cell, cellIndex) {\n                        var upperCell, lowerCell;\n                        var rightCell = row[cellIndex + 1];\n                        var leftCell = row[cellIndex - 1];\n                        if (rowIndex < 3) lowerCell = _this.currentState[rowIndex + 1][cellIndex];\n                        if (rowIndex > 0) upperCell = _this.currentState[rowIndex - 1][cellIndex];\n                        var zeroValue = [\n                            lowerCell,\n                            upperCell,\n                            leftCell,\n                            rightCell\n                        ].some(function(el) {\n                            return el === 0;\n                        });\n                        var sameValue = [\n                            lowerCell,\n                            upperCell,\n                            leftCell,\n                            rightCell\n                        ].some(function(el) {\n                            return el === cell;\n                        });\n                        var possibleForCell = zeroValue || sameValue;\n                        return possibleForCell;\n                    });\n                });\n            }\n        },\n        {\n            key: \"renderHTML\",\n            value: function renderHTML() {\n                var _this = this;\n                this.currentState.forEach(function(row, rowIndex) {\n                    var tr = _this.tbody.children[rowIndex];\n                    var cells = (0, $227c6742e0ff6f82$export$71511d61b312f219)(tr.children);\n                    cells.forEach(function(cell, cellIndex) {\n                        if (row[cellIndex] === 0) _this.clearCell(cell);\n                        else {\n                            cell.textContent = row[cellIndex];\n                            cell.className = \"field-cell\";\n                            cell.classList.add(\"field-cell--\".concat(row[cellIndex]));\n                        }\n                    });\n                });\n            }\n        },\n        {\n            key: \"createNewCell\",\n            value: function createNewCell() {\n                var fullField = this.currentState.every(function(row) {\n                    return row.every(function(cell) {\n                        return cell !== 0;\n                    });\n                });\n                if (fullField) return;\n                var rowIndex, cellIndex;\n                do {\n                    rowIndex = Math.floor(Math.random() * 4);\n                    cellIndex = Math.floor(Math.random() * 4);\n                }while (this.currentState[rowIndex][cellIndex] !== 0);\n                this.currentState[rowIndex][cellIndex] = 2;\n            }\n        },\n        {\n            key: \"clearCell\",\n            value: function clearCell(cell) {\n                cell.className = \"field-cell\";\n                cell.textContent = \"\";\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                var isVertical = direction === \"up\" || direction === \"down\";\n                var step = direction === \"left\" || direction === \"up\" ? -1 : 1;\n                var start = step === 1 ? 3 : 0;\n                var end = function(i) {\n                    return step === 1 ? i >= 0 : i < 4;\n                };\n                var moveDone = false;\n                for(var rowIndex = start; end(rowIndex); rowIndex -= step)for(var cellIndex = start; end(cellIndex); cellIndex -= step){\n                    var n = 0;\n                    var row = rowIndex;\n                    var col = cellIndex;\n                    var nextRow = isVertical ? rowIndex + (n + 1) * step : rowIndex;\n                    var nextCol = isVertical ? cellIndex : cellIndex + (n + 1) * step;\n                    var currentCell = this.currentState[row][col];\n                    var nextCell = void 0;\n                    if (currentCell === 0) continue;\n                    if (nextRow >= 0 && nextRow < 4) nextCell = this.currentState[nextRow][nextCol];\n                    while(nextCell === 0 || nextCell === currentCell){\n                        moveDone = true;\n                        if (nextCell === 0) {\n                            this.currentState[nextRow][nextCol] = currentCell;\n                            this.currentState[row][col] = 0;\n                            n++;\n                            row = isVertical ? rowIndex + n * step : rowIndex;\n                            col = isVertical ? cellIndex : cellIndex + n * step;\n                            nextRow = isVertical ? rowIndex + (n + 1) * step : rowIndex;\n                            nextCol = isVertical ? cellIndex : cellIndex + (n + 1) * step;\n                            if (nextRow >= 0 && nextRow < 4 && nextCol >= 0 && nextCol < 4) {\n                                currentCell = this.currentState[row][col];\n                                nextCell = this.currentState[nextRow][nextCol];\n                            } else break;\n                        } else {\n                            this.currentState[nextRow][nextCol] = currentCell * 2;\n                            this.currentState[row][col] = 0;\n                            this.score += currentCell * 2;\n                            this.getScore();\n                            break;\n                        }\n                    }\n                }\n                if (moveDone) {\n                    this.createNewCell();\n                    this.renderHTML();\n                    this.getStatus();\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.move(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.move(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.move(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.move(\"down\");\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                var scoreField = document.querySelector(\".game-score\");\n                scoreField.textContent = this.score;\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.currentState;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                var emptyField = this.currentState.every(function(row) {\n                    return row.every(function(cell) {\n                        return cell === 0;\n                    });\n                });\n                if (emptyField) return \"idle\";\n                var is2048 = this.currentState.some(function(row) {\n                    return row.some(function(cell) {\n                        return cell === 2048;\n                    });\n                });\n                if (is2048) {\n                    document.querySelector(\".message-win\").classList.remove(\"hidden\");\n                    return \"win\";\n                }\n                if (!this.nextMovePossible()) {\n                    document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n                    return \"lose\";\n                }\n                return \"playing\";\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.createNewCell();\n                this.createNewCell();\n                this.renderHTML();\n                document.querySelector(\".message-start\").classList.add(\"hidden\");\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                document.querySelector(\".message-win\").classList.add(\"hidden\");\n                document.querySelector(\".message-lose\").classList.add(\"hidden\");\n                this.currentState = this.initialState.map(function(el) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(el);\n                });\n                this.score = 0;\n                this.getScore();\n                this.createNewCell();\n                this.createNewCell();\n                this.renderHTML();\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$initialState = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports($197cd56b15c33885$var$initialState);\nvar $197cd56b15c33885$var$button = document.querySelector(\"button\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", $197cd56b15c33885$var$buttonFunction);\nfunction $197cd56b15c33885$var$buttonFunction() {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n    } else $197cd56b15c33885$var$game.restart();\n}\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$keyDown);\nfunction $197cd56b15c33885$var$keyDown(e) {\n    var key = e.key;\n    switch(key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n    }\n}\n\n})();\n//# sourceMappingURL=index.28e086ab.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst initialState = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nconst game = new Game(initialState);\n\nconst button = document.querySelector('button');\n\nbutton.addEventListener('click', buttonFunction);\n\nfunction buttonFunction() {\n  if (button.classList.contains('start')) {\n    game.start();\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n  } else {\n    game.restart();\n  }\n}\n\ndocument.addEventListener('keydown', keyDown);\n\nfunction keyDown(e) {\n  const key = e.key;\n\n  switch (key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n  }\n}\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.initialState = initialState;\n    this.currentState = initialState.map((el) => [...el]);\n    this.tbody = document.querySelector('tbody');\n    this.score = 0;\n  }\n\n  nextMovePossible() {\n    return this.currentState.some((row, rowIndex) => {\n      return row.some((cell, cellIndex) => {\n        let upperCell, lowerCell;\n        const rightCell = row[cellIndex + 1];\n        const leftCell = row[cellIndex - 1];\n\n        if (rowIndex < 3) {\n          lowerCell = this.currentState[rowIndex + 1][cellIndex];\n        }\n\n        if (rowIndex > 0) {\n          upperCell = this.currentState[rowIndex - 1][cellIndex];\n        }\n\n        const zeroValue = [lowerCell, upperCell, leftCell, rightCell].some(\n          (el) => el === 0,\n        );\n        const sameValue = [lowerCell, upperCell, leftCell, rightCell].some(\n          (el) => el === cell,\n        );\n        const possibleForCell = zeroValue || sameValue;\n\n        return possibleForCell;\n      });\n    });\n  }\n\n  renderHTML() {\n    this.currentState.forEach((row, rowIndex) => {\n      const tr = this.tbody.children[rowIndex];\n      const cells = [...tr.children];\n\n      cells.forEach((cell, cellIndex) => {\n        if (row[cellIndex] === 0) {\n          this.clearCell(cell);\n        } else {\n          cell.textContent = row[cellIndex];\n          cell.className = 'field-cell';\n          cell.classList.add(`field-cell--${row[cellIndex]}`);\n        }\n      });\n    });\n  }\n\n  createNewCell() {\n    const fullField = this.currentState.every((row) => {\n      return row.every((cell) => cell !== 0);\n    });\n\n    if (fullField) {\n      return;\n    }\n\n    let rowIndex, cellIndex;\n\n    do {\n      rowIndex = Math.floor(Math.random() * 4);\n      cellIndex = Math.floor(Math.random() * 4);\n    } while (this.currentState[rowIndex][cellIndex] !== 0);\n\n    this.currentState[rowIndex][cellIndex] = 2;\n  }\n\n  clearCell(cell) {\n    cell.className = 'field-cell';\n    cell.textContent = '';\n  }\n\n  move(direction) {\n    const isVertical = direction === 'up' || direction === 'down';\n    const step = direction === 'left' || direction === 'up' ? -1 : 1;\n    const start = step === 1 ? 3 : 0;\n    const end = (i) => (step === 1 ? i >= 0 : i < 4);\n\n    let moveDone = false;\n\n    for (let rowIndex = start; end(rowIndex); rowIndex -= step) {\n      for (let cellIndex = start; end(cellIndex); cellIndex -= step) {\n        let n = 0;\n        let row = rowIndex;\n        let col = cellIndex;\n        let nextRow = isVertical ? rowIndex + (n + 1) * step : rowIndex;\n        let nextCol = isVertical ? cellIndex : cellIndex + (n + 1) * step;\n\n        let currentCell = this.currentState[row][col];\n        let nextCell;\n\n        if (currentCell === 0) {\n          continue;\n        }\n\n        if (nextRow >= 0 && nextRow < 4) {\n          nextCell = this.currentState[nextRow][nextCol];\n        }\n\n        while (nextCell === 0 || nextCell === currentCell) {\n          moveDone = true;\n\n          if (nextCell === 0) {\n            this.currentState[nextRow][nextCol] = currentCell;\n            this.currentState[row][col] = 0;\n\n            n++;\n\n            row = isVertical ? rowIndex + n * step : rowIndex;\n            col = isVertical ? cellIndex : cellIndex + n * step;\n            nextRow = isVertical ? rowIndex + (n + 1) * step : rowIndex;\n            nextCol = isVertical ? cellIndex : cellIndex + (n + 1) * step;\n\n            if (nextRow >= 0 && nextRow < 4 && nextCol >= 0 && nextCol < 4) {\n              currentCell = this.currentState[row][col];\n              nextCell = this.currentState[nextRow][nextCol];\n            } else {\n              break;\n            }\n          } else {\n            this.currentState[nextRow][nextCol] = currentCell * 2;\n            this.currentState[row][col] = 0;\n            this.score += currentCell * 2;\n            this.getScore();\n            break;\n          }\n        }\n      }\n    }\n\n    if (moveDone) {\n      this.createNewCell();\n      this.renderHTML();\n      this.getStatus();\n    }\n  }\n\n  moveLeft() {\n    this.move('left');\n  }\n\n  moveRight() {\n    this.move('right');\n  }\n\n  moveUp() {\n    this.move('up');\n  }\n\n  moveDown() {\n    this.move('down');\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    const scoreField = document.querySelector('.game-score');\n\n    scoreField.textContent = this.score;\n\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.currentState;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    const emptyField = this.currentState.every((row) => {\n      return row.every((cell) => cell === 0);\n    });\n\n    if (emptyField) {\n      return 'idle';\n    }\n\n    const is2048 = this.currentState.some((row) => {\n      return row.some((cell) => cell === 2048);\n    });\n\n    if (is2048) {\n      document.querySelector('.message-win').classList.remove('hidden');\n\n      return 'win';\n    }\n\n    if (!this.nextMovePossible()) {\n      document.querySelector('.message-lose').classList.remove('hidden');\n\n      return 'lose';\n    }\n\n    return 'playing';\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.createNewCell();\n    this.createNewCell();\n    this.renderHTML();\n    document.querySelector('.message-start').classList.add('hidden');\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    document.querySelector('.message-win').classList.add('hidden');\n    document.querySelector('.message-lose').classList.add('hidden');\n    this.currentState = this.initialState.map((el) => [...el]);\n    this.score = 0;\n    this.getScore();\n    this.createNewCell();\n    this.createNewCell();\n    this.renderHTML();\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","currentState","map","el","tbody","document","querySelector","score","key","value","_this","some","row","rowIndex","cell","cellIndex","upperCell","lowerCell","rightCell","leftCell","zeroValue","sameValue","forEach","cells","tr","children","clearCell","textContent","className","classList","add","concat","every","Math","floor","random","direction","isVertical","step","start","end","moveDone","col","nextRow","nextCol","currentCell","nextCell","getScore","createNewCell","renderHTML","getStatus","move","scoreField","remove","nextMovePossible","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$button","addEventListener","contains","restart","e","moveLeft","moveRight","moveDown","moveUp"],"version":3,"file":"index.28e086ab.js.map"}